syntax = "proto3";

package aicoreops_api;

option go_package = "./types";

// API 服务定义
service ApiService {
  // 创建 API
  rpc CreateApi (CreateApiRequest) returns (CreateApiResponse);
  // 获取 API 详情
  rpc GetApi (GetApiRequest) returns (GetApiResponse);
  // 更新 API
  rpc UpdateApi (UpdateApiRequest) returns (UpdateApiResponse);
  // 删除 API
  rpc DeleteApi (DeleteApiRequest) returns (DeleteApiResponse);
  // 列出 APIs
  rpc ListApis (ListApisRequest) returns (ListApisResponse);
}

// API 对象
message Api {
  int64 id = 1; // API ID
  string name = 2; // 名称
  string path = 3; // 路径
  HttpMethod method = 4; // HTTP 方法
  string description = 5; // 描述
  string version = 6; // 版本
  ApiCategory category = 7; // 分类
  int32 is_public = 8; // 是否公开
  int64 create_time = 9; // 创建时间
  int64 update_time = 10; // 更新时间
  int32 is_deleted = 11; // 是否已删除
}

// HTTP 方法枚举
enum HttpMethod {
  UNKNOWN_METHOD = 0;
  GET = 1;
  POST = 2;
  PUT = 3;
  DELETE = 4;
  PATCH = 5;
  OPTIONS = 6;
  HEAD = 7;
}

// API 分类枚举
enum ApiCategory {
  UNKNOWN_CATEGORY = 0;
  USER = 1;
  ADMIN = 2;
  PAYMENT = 3;
  NOTIFICATION = 4;
}

// 创建 API 请求
message CreateApiRequest {
  string name = 1; // 名称
  string path = 2; // 路径
  HttpMethod method = 3; // HTTP 方法
  string description = 4; // 描述
  string version = 5; // 版本
  ApiCategory category = 6; // 分类
  int32 is_public = 7; // 是否公开
}

// 创建 API 响应
message CreateApiResponse {
  int32 code = 1; // 响应码
  string message = 2; // 响应消息
  Api api = 3; // 创建的 API 对象
}

// 获取 API 请求
message GetApiRequest {
  int64 id = 1; // API ID
}

// 获取 API 响应
message GetApiResponse {
  int32 code = 1; // 响应码
  string message = 2; // 响应消息
  Api data = 3; // API 对象
}

// 更新 API 请求
message UpdateApiRequest {
  Api api = 1; // 需要更新的 API 对象
}

// 更新 API 响应
message UpdateApiResponse {
  int32 code = 1; // 响应码
  string message = 2; // 响应消息
}

// 删除 API 请求
message DeleteApiRequest {
  int64 id = 1; // API ID
}

// 删除 API 响应
message DeleteApiResponse {
  int32 code = 1; // 响应码
  string message = 2; // 响应消息
}

// 列出 APIs 请求
message ListApisRequest {
  int32 page_number = 1; // 页码
  int32 page_size = 2; // 每页数量
  string filter = 3; // 过滤条件（例如：名称、分类）
  string sort_by = 4; // 排序字段
  int32 descending = 5; // 是否降序
}

// 列出 APIs 响应
message ListApisResponse {
  int32 code = 1; // 响应码
  string message = 2; // 响应消息
  ListApisData data = 3; // 响应数据
}

// 列出 APIs 响应数据
message ListApisData {
  repeated Api apis = 1; // API 列表
  int32 total = 2; // 总数量
  int32 page_number = 3; // 当前页码
  int32 page_size = 4; // 每页数量
}
