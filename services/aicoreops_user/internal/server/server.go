// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: aicoreops_user.proto

package server

import (
	"aicoreops_user/internal/logic"
	"context"

	"aicoreops_user/internal/svc"
	"aicoreops_user/types"
)

type AicoreopsUserServer struct {
	svcCtx *svc.ServiceContext
	types.UnimplementedUserServiceServer
}

func (s *AicoreopsUserServer) CreateUser(ctx context.Context, request *types.CreateUserRequest) (*types.CreateUserResponse, error) {
	l := logic.NewUserLogic(ctx, s.svcCtx)
	return l.CreateUser(ctx, request)
}

func (s *AicoreopsUserServer) GetUser(ctx context.Context, request *types.GetUserRequest) (*types.GetUserResponse, error) {
	l := logic.NewUserLogic(ctx, s.svcCtx)
	return l.GetUser(ctx, request)
}

func (s *AicoreopsUserServer) UpdateUser(ctx context.Context, request *types.UpdateUserRequest) (*types.UpdateUserResponse, error) {
	l := logic.NewUserLogic(ctx, s.svcCtx)
	return l.UpdateUser(ctx, request)
}

func (s *AicoreopsUserServer) DeleteUser(ctx context.Context, request *types.DeleteUserRequest) (*types.DeleteUserResponse, error) {
	l := logic.NewUserLogic(ctx, s.svcCtx)
	return l.DeleteUser(ctx, request)
}

func (s *AicoreopsUserServer) ListUsers(ctx context.Context, request *types.ListUsersRequest) (*types.ListUsersResponse, error) {
	l := logic.NewUserLogic(ctx, s.svcCtx)
	return l.ListUsers(ctx, request)
}

func NewAicoreopsUserServer(svcCtx *svc.ServiceContext) *AicoreopsUserServer {
	return &AicoreopsUserServer{
		svcCtx: svcCtx,
	}
}
