// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: prometheus_rpc.proto

package prometheusrpcclient

import (
	"context"

	"prometheus_rpc/prometheus_rpc"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Request  = prometheus_rpc.Request
	Response = prometheus_rpc.Response

	PrometheusRpc interface {
		Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	}

	defaultPrometheusRpc struct {
		cli zrpc.Client
	}
)

func NewPrometheusRpc(cli zrpc.Client) PrometheusRpc {
	return &defaultPrometheusRpc{
		cli: cli,
	}
}

func (m *defaultPrometheusRpc) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := prometheus_rpc.NewPrometheusRpcClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}
