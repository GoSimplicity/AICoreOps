// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.1
// source: aicoreops_ai.proto

package types

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 对话式 AI 助手请求
type AskQuestionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Question  string `protobuf:"bytes,1,opt,name=question,proto3" json:"question,omitempty"`                    // 用户提问内容
	SessionId string `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"` // 会话ID,用于追踪对话上下文
}

func (x *AskQuestionRequest) Reset() {
	*x = AskQuestionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aicoreops_ai_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AskQuestionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AskQuestionRequest) ProtoMessage() {}

func (x *AskQuestionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aicoreops_ai_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AskQuestionRequest.ProtoReflect.Descriptor instead.
func (*AskQuestionRequest) Descriptor() ([]byte, []int) {
	return file_aicoreops_ai_proto_rawDescGZIP(), []int{0}
}

func (x *AskQuestionRequest) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

func (x *AskQuestionRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

// 对话式 AI 助手响应
type AskQuestionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                           `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`      // 状态码，0 表示成功，非 0 表示错误
	Message string                          `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"` // 错误信息或成功提示
	Data    *AskQuestionResponse_AnswerData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`       // 返回的数据
}

func (x *AskQuestionResponse) Reset() {
	*x = AskQuestionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aicoreops_ai_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AskQuestionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AskQuestionResponse) ProtoMessage() {}

func (x *AskQuestionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aicoreops_ai_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AskQuestionResponse.ProtoReflect.Descriptor instead.
func (*AskQuestionResponse) Descriptor() ([]byte, []int) {
	return file_aicoreops_ai_proto_rawDescGZIP(), []int{1}
}

func (x *AskQuestionResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AskQuestionResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AskQuestionResponse) GetData() *AskQuestionResponse_AnswerData {
	if x != nil {
		return x.Data
	}
	return nil
}

// 获取聊天历史请求
type GetChatHistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"` // 会话ID
	Page      int32  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`                           // 页码
	PageSize  int32  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`   // 每页数量
}

func (x *GetChatHistoryRequest) Reset() {
	*x = GetChatHistoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aicoreops_ai_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChatHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatHistoryRequest) ProtoMessage() {}

func (x *GetChatHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aicoreops_ai_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatHistoryRequest.ProtoReflect.Descriptor instead.
func (*GetChatHistoryRequest) Descriptor() ([]byte, []int) {
	return file_aicoreops_ai_proto_rawDescGZIP(), []int{2}
}

func (x *GetChatHistoryRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *GetChatHistoryRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetChatHistoryRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// 获取聊天历史响应
type GetChatHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                                   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`      // 状态码
	Message string                                  `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"` // 错误信息或成功提示
	Data    *GetChatHistoryResponse_ChatHistoryData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`       // 返回的数据
}

func (x *GetChatHistoryResponse) Reset() {
	*x = GetChatHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aicoreops_ai_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChatHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatHistoryResponse) ProtoMessage() {}

func (x *GetChatHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aicoreops_ai_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatHistoryResponse.ProtoReflect.Descriptor instead.
func (*GetChatHistoryResponse) Descriptor() ([]byte, []int) {
	return file_aicoreops_ai_proto_rawDescGZIP(), []int{3}
}

func (x *GetChatHistoryResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetChatHistoryResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetChatHistoryResponse) GetData() *GetChatHistoryResponse_ChatHistoryData {
	if x != nil {
		return x.Data
	}
	return nil
}

// 上传文档请求
type UploadDocumentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title   string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`     // 文档标题
	Content string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"` // 文档内容
}

func (x *UploadDocumentRequest) Reset() {
	*x = UploadDocumentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aicoreops_ai_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadDocumentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadDocumentRequest) ProtoMessage() {}

func (x *UploadDocumentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aicoreops_ai_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadDocumentRequest.ProtoReflect.Descriptor instead.
func (*UploadDocumentRequest) Descriptor() ([]byte, []int) {
	return file_aicoreops_ai_proto_rawDescGZIP(), []int{4}
}

func (x *UploadDocumentRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UploadDocumentRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

// 上传文档响应
type UploadDocumentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                           `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`      // 状态码
	Message string                          `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"` // 错误信息或成功提示
	Data    *UploadDocumentResponse_DocData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`       // 返回的数据
}

func (x *UploadDocumentResponse) Reset() {
	*x = UploadDocumentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aicoreops_ai_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadDocumentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadDocumentResponse) ProtoMessage() {}

func (x *UploadDocumentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aicoreops_ai_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadDocumentResponse.ProtoReflect.Descriptor instead.
func (*UploadDocumentResponse) Descriptor() ([]byte, []int) {
	return file_aicoreops_ai_proto_rawDescGZIP(), []int{5}
}

func (x *UploadDocumentResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UploadDocumentResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UploadDocumentResponse) GetData() *UploadDocumentResponse_DocData {
	if x != nil {
		return x.Data
	}
	return nil
}

// 历史会话
type HistorySession struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"` // 会话ID
	Title     string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`                          // 会话标题
}

func (x *HistorySession) Reset() {
	*x = HistorySession{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aicoreops_ai_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HistorySession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistorySession) ProtoMessage() {}

func (x *HistorySession) ProtoReflect() protoreflect.Message {
	mi := &file_aicoreops_ai_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistorySession.ProtoReflect.Descriptor instead.
func (*HistorySession) Descriptor() ([]byte, []int) {
	return file_aicoreops_ai_proto_rawDescGZIP(), []int{6}
}

func (x *HistorySession) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *HistorySession) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

// 获取历史会话
type GetHistoryListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 用户ID
}

func (x *GetHistoryListRequest) Reset() {
	*x = GetHistoryListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aicoreops_ai_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHistoryListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHistoryListRequest) ProtoMessage() {}

func (x *GetHistoryListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aicoreops_ai_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHistoryListRequest.ProtoReflect.Descriptor instead.
func (*GetHistoryListRequest) Descriptor() ([]byte, []int) {
	return file_aicoreops_ai_proto_rawDescGZIP(), []int{7}
}

func (x *GetHistoryListRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// 获取历史会话响应
type GetHistoryListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32             `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`      // 状态码
	Message string            `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"` // 错误信息或成功提示
	Data    []*HistorySession `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`       // 返回的数据
}

func (x *GetHistoryListResponse) Reset() {
	*x = GetHistoryListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aicoreops_ai_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHistoryListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHistoryListResponse) ProtoMessage() {}

func (x *GetHistoryListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aicoreops_ai_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHistoryListResponse.ProtoReflect.Descriptor instead.
func (*GetHistoryListResponse) Descriptor() ([]byte, []int) {
	return file_aicoreops_ai_proto_rawDescGZIP(), []int{8}
}

func (x *GetHistoryListResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetHistoryListResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetHistoryListResponse) GetData() []*HistorySession {
	if x != nil {
		return x.Data
	}
	return nil
}

// 日志分析请求
type AnalyzeLogsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogData string `protobuf:"bytes,1,opt,name=log_data,json=logData,proto3" json:"log_data,omitempty"` // 提交的日志内容
}

func (x *AnalyzeLogsRequest) Reset() {
	*x = AnalyzeLogsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aicoreops_ai_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnalyzeLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyzeLogsRequest) ProtoMessage() {}

func (x *AnalyzeLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aicoreops_ai_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyzeLogsRequest.ProtoReflect.Descriptor instead.
func (*AnalyzeLogsRequest) Descriptor() ([]byte, []int) {
	return file_aicoreops_ai_proto_rawDescGZIP(), []int{9}
}

func (x *AnalyzeLogsRequest) GetLogData() string {
	if x != nil {
		return x.LogData
	}
	return ""
}

// 日志分析响应
type AnalyzeLogsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                               `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`      // 状态码
	Message string                              `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"` // 错误信息或成功提示
	Data    *AnalyzeLogsResponse_SuggestionData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`       // 返回的数据
}

func (x *AnalyzeLogsResponse) Reset() {
	*x = AnalyzeLogsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aicoreops_ai_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnalyzeLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyzeLogsResponse) ProtoMessage() {}

func (x *AnalyzeLogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aicoreops_ai_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyzeLogsResponse.ProtoReflect.Descriptor instead.
func (*AnalyzeLogsResponse) Descriptor() ([]byte, []int) {
	return file_aicoreops_ai_proto_rawDescGZIP(), []int{10}
}

func (x *AnalyzeLogsResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AnalyzeLogsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AnalyzeLogsResponse) GetData() *AnalyzeLogsResponse_SuggestionData {
	if x != nil {
		return x.Data
	}
	return nil
}

// 自动修复任务请求
type FixTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Task  string `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`                // 修复任务类型（如 fixOOM）
	PodId string `protobuf:"bytes,2,opt,name=pod_id,json=podId,proto3" json:"pod_id,omitempty"` // Pod ID
}

func (x *FixTaskRequest) Reset() {
	*x = FixTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aicoreops_ai_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FixTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FixTaskRequest) ProtoMessage() {}

func (x *FixTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aicoreops_ai_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FixTaskRequest.ProtoReflect.Descriptor instead.
func (*FixTaskRequest) Descriptor() ([]byte, []int) {
	return file_aicoreops_ai_proto_rawDescGZIP(), []int{11}
}

func (x *FixTaskRequest) GetTask() string {
	if x != nil {
		return x.Task
	}
	return ""
}

func (x *FixTaskRequest) GetPodId() string {
	if x != nil {
		return x.PodId
	}
	return ""
}

// 自动修复任务响应
type FixTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                          `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`      // 状态码
	Message string                         `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"` // 错误信息或成功提示
	Data    *FixTaskResponse_FixStatusData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`       // 返回的数据
}

func (x *FixTaskResponse) Reset() {
	*x = FixTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aicoreops_ai_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FixTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FixTaskResponse) ProtoMessage() {}

func (x *FixTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aicoreops_ai_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FixTaskResponse.ProtoReflect.Descriptor instead.
func (*FixTaskResponse) Descriptor() ([]byte, []int) {
	return file_aicoreops_ai_proto_rawDescGZIP(), []int{12}
}

func (x *FixTaskResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *FixTaskResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *FixTaskResponse) GetData() *FixTaskResponse_FixStatusData {
	if x != nil {
		return x.Data
	}
	return nil
}

type AskQuestionResponse_AnswerData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Answer    string `protobuf:"bytes,1,opt,name=answer,proto3" json:"answer,omitempty"`                        // AI 助手的回答内容
	SessionId string `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"` // 会话ID
}

func (x *AskQuestionResponse_AnswerData) Reset() {
	*x = AskQuestionResponse_AnswerData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aicoreops_ai_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AskQuestionResponse_AnswerData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AskQuestionResponse_AnswerData) ProtoMessage() {}

func (x *AskQuestionResponse_AnswerData) ProtoReflect() protoreflect.Message {
	mi := &file_aicoreops_ai_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AskQuestionResponse_AnswerData.ProtoReflect.Descriptor instead.
func (*AskQuestionResponse_AnswerData) Descriptor() ([]byte, []int) {
	return file_aicoreops_ai_proto_rawDescGZIP(), []int{1, 0}
}

func (x *AskQuestionResponse_AnswerData) GetAnswer() string {
	if x != nil {
		return x.Answer
	}
	return ""
}

func (x *AskQuestionResponse_AnswerData) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type GetChatHistoryResponse_ChatHistoryData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Messages []*GetChatHistoryResponse_ChatMessage `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"` // 聊天记录列表
	Total    int32                                 `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`      // 总记录数
}

func (x *GetChatHistoryResponse_ChatHistoryData) Reset() {
	*x = GetChatHistoryResponse_ChatHistoryData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aicoreops_ai_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChatHistoryResponse_ChatHistoryData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatHistoryResponse_ChatHistoryData) ProtoMessage() {}

func (x *GetChatHistoryResponse_ChatHistoryData) ProtoReflect() protoreflect.Message {
	mi := &file_aicoreops_ai_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatHistoryResponse_ChatHistoryData.ProtoReflect.Descriptor instead.
func (*GetChatHistoryResponse_ChatHistoryData) Descriptor() ([]byte, []int) {
	return file_aicoreops_ai_proto_rawDescGZIP(), []int{3, 0}
}

func (x *GetChatHistoryResponse_ChatHistoryData) GetMessages() []*GetChatHistoryResponse_ChatMessage {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *GetChatHistoryResponse_ChatHistoryData) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetChatHistoryResponse_ChatMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Question   string `protobuf:"bytes,1,opt,name=question,proto3" json:"question,omitempty"`                        // 问题
	Answer     string `protobuf:"bytes,2,opt,name=answer,proto3" json:"answer,omitempty"`                            // 回答
	CreateTime int64  `protobuf:"varint,3,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"` // 创建时间
}

func (x *GetChatHistoryResponse_ChatMessage) Reset() {
	*x = GetChatHistoryResponse_ChatMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aicoreops_ai_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChatHistoryResponse_ChatMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatHistoryResponse_ChatMessage) ProtoMessage() {}

func (x *GetChatHistoryResponse_ChatMessage) ProtoReflect() protoreflect.Message {
	mi := &file_aicoreops_ai_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatHistoryResponse_ChatMessage.ProtoReflect.Descriptor instead.
func (*GetChatHistoryResponse_ChatMessage) Descriptor() ([]byte, []int) {
	return file_aicoreops_ai_proto_rawDescGZIP(), []int{3, 1}
}

func (x *GetChatHistoryResponse_ChatMessage) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

func (x *GetChatHistoryResponse_ChatMessage) GetAnswer() string {
	if x != nil {
		return x.Answer
	}
	return ""
}

func (x *GetChatHistoryResponse_ChatMessage) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

type UploadDocumentResponse_DocData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DocId string `protobuf:"bytes,1,opt,name=doc_id,json=docId,proto3" json:"doc_id,omitempty"` // 文档ID
}

func (x *UploadDocumentResponse_DocData) Reset() {
	*x = UploadDocumentResponse_DocData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aicoreops_ai_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadDocumentResponse_DocData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadDocumentResponse_DocData) ProtoMessage() {}

func (x *UploadDocumentResponse_DocData) ProtoReflect() protoreflect.Message {
	mi := &file_aicoreops_ai_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadDocumentResponse_DocData.ProtoReflect.Descriptor instead.
func (*UploadDocumentResponse_DocData) Descriptor() ([]byte, []int) {
	return file_aicoreops_ai_proto_rawDescGZIP(), []int{5, 0}
}

func (x *UploadDocumentResponse_DocData) GetDocId() string {
	if x != nil {
		return x.DocId
	}
	return ""
}

type AnalyzeLogsResponse_SuggestionData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Suggestion string `protobuf:"bytes,1,opt,name=suggestion,proto3" json:"suggestion,omitempty"` // 修复建议
}

func (x *AnalyzeLogsResponse_SuggestionData) Reset() {
	*x = AnalyzeLogsResponse_SuggestionData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aicoreops_ai_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnalyzeLogsResponse_SuggestionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyzeLogsResponse_SuggestionData) ProtoMessage() {}

func (x *AnalyzeLogsResponse_SuggestionData) ProtoReflect() protoreflect.Message {
	mi := &file_aicoreops_ai_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyzeLogsResponse_SuggestionData.ProtoReflect.Descriptor instead.
func (*AnalyzeLogsResponse_SuggestionData) Descriptor() ([]byte, []int) {
	return file_aicoreops_ai_proto_rawDescGZIP(), []int{10, 0}
}

func (x *AnalyzeLogsResponse_SuggestionData) GetSuggestion() string {
	if x != nil {
		return x.Suggestion
	}
	return ""
}

type FixTaskResponse_FixStatusData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"` // 修复任务状态
}

func (x *FixTaskResponse_FixStatusData) Reset() {
	*x = FixTaskResponse_FixStatusData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aicoreops_ai_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FixTaskResponse_FixStatusData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FixTaskResponse_FixStatusData) ProtoMessage() {}

func (x *FixTaskResponse_FixStatusData) ProtoReflect() protoreflect.Message {
	mi := &file_aicoreops_ai_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FixTaskResponse_FixStatusData.ProtoReflect.Descriptor instead.
func (*FixTaskResponse_FixStatusData) Descriptor() ([]byte, []int) {
	return file_aicoreops_ai_proto_rawDescGZIP(), []int{12, 0}
}

func (x *FixTaskResponse_FixStatusData) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

var File_aicoreops_ai_proto protoreflect.FileDescriptor

var file_aicoreops_ai_proto_rawDesc = []byte{
	0x0a, 0x12, 0x61, 0x69, 0x63, 0x6f, 0x72, 0x65, 0x6f, 0x70, 0x73, 0x5f, 0x61, 0x69, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x61, 0x69, 0x22, 0x4f, 0x0a, 0x12, 0x41, 0x73, 0x6b, 0x51,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xc0, 0x01, 0x0a, 0x13, 0x41, 0x73,
	0x6b, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x36, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x61, 0x69, 0x2e, 0x41, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x43, 0x0a, 0x0a, 0x41, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x67, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xd7, 0x02, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61,
	0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3e,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61,
	0x69, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x6b,
	0x0a, 0x0f, 0x43, 0x68, 0x61, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x42, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x08, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x1a, 0x62, 0x0a, 0x0b, 0x43,
	0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0x47, 0x0a, 0x15, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0xa0, 0x01, 0x0a, 0x16, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x36, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x61, 0x69, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x6f, 0x63, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x20, 0x0a, 0x07, 0x44, 0x6f, 0x63,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x15, 0x0a, 0x06, 0x64, 0x6f, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x6f, 0x63, 0x49, 0x64, 0x22, 0x45, 0x0a, 0x0e, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x22, 0x30, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x22, 0x6e, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x69, 0x2e,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x2f, 0x0a, 0x12, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x4c,
	0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f,
	0x67, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f,
	0x67, 0x44, 0x61, 0x74, 0x61, 0x22, 0xb1, 0x01, 0x0a, 0x13, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x7a,
	0x65, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3a, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x69, 0x2e, 0x41,
	0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x30, 0x0a, 0x0e, 0x53, 0x75, 0x67, 0x67, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x67,
	0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73,
	0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3b, 0x0a, 0x0e, 0x46, 0x69, 0x78,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x61, 0x73, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x12,
	0x15, 0x0a, 0x06, 0x70, 0x6f, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x70, 0x6f, 0x64, 0x49, 0x64, 0x22, 0x9f, 0x01, 0x0a, 0x0f, 0x46, 0x69, 0x78, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x35, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x69, 0x2e, 0x46, 0x69, 0x78, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x46, 0x69, 0x78, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a,
	0x27, 0x0a, 0x0d, 0x46, 0x69, 0x78, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x32, 0xa9, 0x02, 0x0a, 0x08, 0x41, 0x49, 0x48,
	0x65, 0x6c, 0x70, 0x65, 0x72, 0x12, 0x42, 0x0a, 0x0b, 0x41, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e, 0x61, 0x69, 0x2e, 0x41, 0x73, 0x6b, 0x51, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x61,
	0x69, 0x2e, 0x41, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x30, 0x01, 0x12, 0x47, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x43, 0x68, 0x61, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x19, 0x2e, 0x61, 0x69,
	0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x61, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x68, 0x61, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x47, 0x0a, 0x0e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x2e, 0x61, 0x69, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1a, 0x2e, 0x61, 0x69, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x2e,
	0x61, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x61, 0x69, 0x2e, 0x47, 0x65,
	0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x32, 0x4d, 0x0a, 0x0b, 0x4c, 0x6f, 0x67, 0x41, 0x6e, 0x61, 0x6c, 0x79,
	0x73, 0x69, 0x73, 0x12, 0x3e, 0x0a, 0x0b, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x4c, 0x6f,
	0x67, 0x73, 0x12, 0x16, 0x2e, 0x61, 0x69, 0x2e, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x4c,
	0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x61, 0x69, 0x2e,
	0x41, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x32, 0x3d, 0x0a, 0x07, 0x41, 0x75, 0x74, 0x6f, 0x46, 0x69, 0x78, 0x12, 0x32,
	0x0a, 0x07, 0x46, 0x69, 0x78, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x12, 0x2e, 0x61, 0x69, 0x2e, 0x46,
	0x69, 0x78, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e,
	0x61, 0x69, 0x2e, 0x46, 0x69, 0x78, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_aicoreops_ai_proto_rawDescOnce sync.Once
	file_aicoreops_ai_proto_rawDescData = file_aicoreops_ai_proto_rawDesc
)

func file_aicoreops_ai_proto_rawDescGZIP() []byte {
	file_aicoreops_ai_proto_rawDescOnce.Do(func() {
		file_aicoreops_ai_proto_rawDescData = protoimpl.X.CompressGZIP(file_aicoreops_ai_proto_rawDescData)
	})
	return file_aicoreops_ai_proto_rawDescData
}

var file_aicoreops_ai_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_aicoreops_ai_proto_goTypes = []any{
	(*AskQuestionRequest)(nil),                     // 0: ai.AskQuestionRequest
	(*AskQuestionResponse)(nil),                    // 1: ai.AskQuestionResponse
	(*GetChatHistoryRequest)(nil),                  // 2: ai.GetChatHistoryRequest
	(*GetChatHistoryResponse)(nil),                 // 3: ai.GetChatHistoryResponse
	(*UploadDocumentRequest)(nil),                  // 4: ai.UploadDocumentRequest
	(*UploadDocumentResponse)(nil),                 // 5: ai.UploadDocumentResponse
	(*HistorySession)(nil),                         // 6: ai.HistorySession
	(*GetHistoryListRequest)(nil),                  // 7: ai.GetHistoryListRequest
	(*GetHistoryListResponse)(nil),                 // 8: ai.GetHistoryListResponse
	(*AnalyzeLogsRequest)(nil),                     // 9: ai.AnalyzeLogsRequest
	(*AnalyzeLogsResponse)(nil),                    // 10: ai.AnalyzeLogsResponse
	(*FixTaskRequest)(nil),                         // 11: ai.FixTaskRequest
	(*FixTaskResponse)(nil),                        // 12: ai.FixTaskResponse
	(*AskQuestionResponse_AnswerData)(nil),         // 13: ai.AskQuestionResponse.AnswerData
	(*GetChatHistoryResponse_ChatHistoryData)(nil), // 14: ai.GetChatHistoryResponse.ChatHistoryData
	(*GetChatHistoryResponse_ChatMessage)(nil),     // 15: ai.GetChatHistoryResponse.ChatMessage
	(*UploadDocumentResponse_DocData)(nil),         // 16: ai.UploadDocumentResponse.DocData
	(*AnalyzeLogsResponse_SuggestionData)(nil),     // 17: ai.AnalyzeLogsResponse.SuggestionData
	(*FixTaskResponse_FixStatusData)(nil),          // 18: ai.FixTaskResponse.FixStatusData
}
var file_aicoreops_ai_proto_depIdxs = []int32{
	13, // 0: ai.AskQuestionResponse.data:type_name -> ai.AskQuestionResponse.AnswerData
	14, // 1: ai.GetChatHistoryResponse.data:type_name -> ai.GetChatHistoryResponse.ChatHistoryData
	16, // 2: ai.UploadDocumentResponse.data:type_name -> ai.UploadDocumentResponse.DocData
	6,  // 3: ai.GetHistoryListResponse.data:type_name -> ai.HistorySession
	17, // 4: ai.AnalyzeLogsResponse.data:type_name -> ai.AnalyzeLogsResponse.SuggestionData
	18, // 5: ai.FixTaskResponse.data:type_name -> ai.FixTaskResponse.FixStatusData
	15, // 6: ai.GetChatHistoryResponse.ChatHistoryData.messages:type_name -> ai.GetChatHistoryResponse.ChatMessage
	0,  // 7: ai.AIHelper.AskQuestion:input_type -> ai.AskQuestionRequest
	2,  // 8: ai.AIHelper.GetChatHistory:input_type -> ai.GetChatHistoryRequest
	4,  // 9: ai.AIHelper.UploadDocument:input_type -> ai.UploadDocumentRequest
	7,  // 10: ai.AIHelper.GetHistoryList:input_type -> ai.GetHistoryListRequest
	9,  // 11: ai.LogAnalysis.AnalyzeLogs:input_type -> ai.AnalyzeLogsRequest
	11, // 12: ai.AutoFix.FixTask:input_type -> ai.FixTaskRequest
	1,  // 13: ai.AIHelper.AskQuestion:output_type -> ai.AskQuestionResponse
	3,  // 14: ai.AIHelper.GetChatHistory:output_type -> ai.GetChatHistoryResponse
	5,  // 15: ai.AIHelper.UploadDocument:output_type -> ai.UploadDocumentResponse
	8,  // 16: ai.AIHelper.GetHistoryList:output_type -> ai.GetHistoryListResponse
	10, // 17: ai.LogAnalysis.AnalyzeLogs:output_type -> ai.AnalyzeLogsResponse
	12, // 18: ai.AutoFix.FixTask:output_type -> ai.FixTaskResponse
	13, // [13:19] is the sub-list for method output_type
	7,  // [7:13] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_aicoreops_ai_proto_init() }
func file_aicoreops_ai_proto_init() {
	if File_aicoreops_ai_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_aicoreops_ai_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*AskQuestionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aicoreops_ai_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*AskQuestionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aicoreops_ai_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*GetChatHistoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aicoreops_ai_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GetChatHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aicoreops_ai_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*UploadDocumentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aicoreops_ai_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*UploadDocumentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aicoreops_ai_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*HistorySession); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aicoreops_ai_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GetHistoryListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aicoreops_ai_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*GetHistoryListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aicoreops_ai_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*AnalyzeLogsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aicoreops_ai_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*AnalyzeLogsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aicoreops_ai_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*FixTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aicoreops_ai_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*FixTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aicoreops_ai_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*AskQuestionResponse_AnswerData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aicoreops_ai_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*GetChatHistoryResponse_ChatHistoryData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aicoreops_ai_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*GetChatHistoryResponse_ChatMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aicoreops_ai_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*UploadDocumentResponse_DocData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aicoreops_ai_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*AnalyzeLogsResponse_SuggestionData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aicoreops_ai_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*FixTaskResponse_FixStatusData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_aicoreops_ai_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_aicoreops_ai_proto_goTypes,
		DependencyIndexes: file_aicoreops_ai_proto_depIdxs,
		MessageInfos:      file_aicoreops_ai_proto_msgTypes,
	}.Build()
	File_aicoreops_ai_proto = out.File
	file_aicoreops_ai_proto_rawDesc = nil
	file_aicoreops_ai_proto_goTypes = nil
	file_aicoreops_ai_proto_depIdxs = nil
}
