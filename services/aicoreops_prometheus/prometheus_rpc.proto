syntax = "proto3";

package prometheus_rpc;
option go_package="./types";

service Prometheus_rpc {
  // Alertmanager 相关接口
  rpc GetMonitorAlertmanagerPoolList(GetAlertmanagerPoolListRequest) returns(GetAlertmanagerPoolListResponse);
  rpc CreateMonitorAlertManagerPool(CreateMonitorAlertManagerPoolRequest) returns(CreateMonitorAlertManagerPoolResponse);
  rpc UpdateMonitorAlertManagerPool(UpdateMonitorAlertManagerPoolRequest) returns(UpdateMonitorAlertManagerPoolResponse);
  rpc DeleteMonitorAlertManagerPool(DeleteMonitorAlertManagerPoolRequest) returns(DeleteMonitorAlertManagerPoolResponse);

  // 采集任务
  rpc GetMonitorScrapeJobList(GetMonitorScrapeJobListRequest) returns(GetMonitorScrapeJobListResponse);
  rpc CreateMonitorScrapeJob(CreateMonitorScrapeJobRequest) returns(CreateMonitorScrapeJobResponse);
  rpc UpdateMonitorScrapeJob(UpdateMonitorScrapeJobRequest) returns(UpdateMonitorScrapeJobResponse);
  rpc DeleteMonitorScrapeJob(DeleteMonitorScrapeJobRequest) returns(DeleteMonitorScrapeJobResponse);

  // alertmanager 告警池

  // 告警规则

  // 告警事件

  // 预聚合

  // 配置文件

  // 值班组

  // 发送组
}

message AlertmanagerPool {
  int64 id = 1;
  string name = 2;
  repeated string alertmanager_instances = 3;
  int64 user_id = 4;
  string resolve_timeout = 5;
  string group_wait = 6;
  string group_interval = 7;
  string repeat_interval = 8;
  repeated string group_by = 9;
  string receiver = 10;
}


// Alertmanager 相关接口
message GetAlertmanagerPoolListRequest {
}

message GetAlertmanagerPoolListResponse {
  int32 code = 1;
  string message = 2;
  repeated AlertmanagerPool data = 3;
}

message CreateMonitorAlertManagerPoolRequest {
  AlertmanagerPool pool = 1;
}

message CreateMonitorAlertManagerPoolResponse {
  int32 code = 1;
  string message = 2;
}

message UpdateMonitorAlertManagerPoolRequest {
  AlertmanagerPool pool = 1;
}

message UpdateMonitorAlertManagerPoolResponse {
  int32 code = 1;
  string message = 2;
}

message DeleteMonitorAlertManagerPoolRequest {
  int64 id = 1;
}

message DeleteMonitorAlertManagerPoolResponse {
  int32 code = 1;
  string message = 2;
}

// 采集任务
message ScrapeJob {
  int64 id = 1;
  string name = 2;
  int64 user_id = 3;
  int32 enable = 4;
  string service_discovery_type = 5;
  string metrics_path = 6;
  string scheme = 7;
  int32 scrape_interval = 8;
  int32 scrape_timeout = 9;
  int64 pool_id = 10;
  string relabel_configs_yaml_string = 11;
  int32 refresh_interval = 12;
  int32 port = 13;
  repeated int64 tree_node_ids = 14;
  string kube_config_file_path = 15;
  string tls_ca_file_path = 16;
  string tls_ca_content = 17;
  string bearer_token = 18;
  string bearer_token_file = 19;
  string kubernetes_sd_role = 20;
}

message GetMonitorScrapeJobListRequest {
}

message GetMonitorScrapeJobListResponse {
  int32 code = 1;
  string message = 2;
  repeated ScrapeJob data = 3;
}

message CreateMonitorScrapeJobRequest {
  ScrapeJob job = 1;
}

message CreateMonitorScrapeJobResponse {
  int32 code = 1;
  string message = 2;
}

message UpdateMonitorScrapeJobRequest {
  ScrapeJob job = 1;
}

message UpdateMonitorScrapeJobResponse {
  int32 code = 1;
  string message = 2;
}

message DeleteMonitorScrapeJobRequest {
  int64 id = 1;
}

message DeleteMonitorScrapeJobResponse {
  int32 code = 1;
  string message = 2;
}